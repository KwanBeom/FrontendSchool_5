// 상태관리
// Hook Basic - useState
// 변수의 값이 바뀌어도 페이지는 렌더링 하지 않는다.
// 모든 변수가 변할때마다 컴포넌트를 업데이트 하게 된다면 많은 리소스가 낭비된다
// 따라서, 특정 변수를 지정해 그 변수가 변할때마다 컴포넌트를 업데이트 하라는 명령을 내려줘야함


// React의 가상돔은 JS 객체 형태
// 객체는 immutable(불변)한 특징을 가지고 있음
// 따라서 엄밀하게 따지면 업데이트 되는것은 컴포넌트이고 가상돔은 교체된다 라는 표현이 맞다

// 리액트는 컴포넌트를 업데이트 해야할 때를 결정하는 매커니즘을 가지고 있음
// 이를 재조정(reconciliation)을 거친다고 표현함

// - 재조정(reconciliation)
// 양자를 서로 비교 대조해 차이를 없애고 같은 값이 되도록 하는 과정

// React의 재조정
// 1. 컴포넌트의 타입 비교
// 2. 속성이 변경되었는지 비교
// 3. 컴포넌트의 자식 요소가 변경되었는지 비교
// 이 과정을 거쳐 React는 변경된 부분만 업데이트 하고 나머지 부분은 유지한다

// 변수의 값이 변경될때마다 페이지를 업데이트 하도록 만들어주는 게 useState
// 상태관리 - useState